{"version":3,"sources":["Header.js","Main.js","Bar.js","App.js","index.js"],"names":["algorithms","Header","state","currentAlgoritmIndex","evaluateSpeed","bind","evaluateSize","arrAlgos","newIndex","this","length","setState","event","val","parseInt","target","value","props","sizeValue","setSize","speedValue","setSpeed","className","onClick","generate","disabled","isSorting","id","algorithmSetter","a","sortMethod","type","min","max","step","onInput","name","defaultChecked","React","Component","Main","bars","Bar","style","height","backgroundColor","sleep","ms","Promise","resolve","setTimeout","YELLOW","GREEN","PURPLE","App","arrBars","numBars","isSorted","speed","arr","Array","i","barArr","map","item","index","color","element","key","colorChanged","quickSort","bubbleSort","mergeSort","start","end","mid","Math","floor","tmpArr","j","k","merge","len","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a8eea62.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst algorithms = [\"Quick Sort\", \"Merge Sort\", \"Bubble Sort\"];\r\n\r\nexport default class Header extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tcurrentAlgoritmIndex: 0\r\n\t\t};\r\n\t\tthis.evaluateSpeed = this.evaluateSpeed.bind(this);\r\n\t\tthis.evaluateSize = this.evaluateSize.bind(this);\r\n\t}\r\n\r\n\talgorithmSetter(arrAlgos) {\r\n\t\tlet newIndex = (this.state.currentAlgoritmIndex + 1) % arrAlgos.length;\r\n\t\tthis.setState({ currentAlgoritmIndex: newIndex });\r\n\t}\r\n\r\n\tevaluateSize(event) {\r\n\t\tlet val = parseInt(event.target.value, 10);\r\n\t\tif (val !== this.props.sizeValue) this.props.setSize(val);\r\n\t}\r\n\r\n\tevaluateSpeed(event) {\r\n\t\tlet val = parseInt(event.target.value, 10);\r\n\t\tif (val !== this.props.speedValue) this.props.setSpeed(val);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<header className=\"Header\">\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<div className=\"HeaderContent HeaderTitle\">Visualize Sorting</div>\r\n\t\t\t\t\t<div className=\"HeaderContent HeaderOption\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={this.props.generate}\r\n\t\t\t\t\t\t\tdisabled={this.props.isSorting}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tGenerate\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"HeaderContent HeaderOption\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"discoverable\"\r\n\t\t\t\t\t\t\tid=\"algoBtn\"\r\n\t\t\t\t\t\t\tonClick={() => this.algorithmSetter(algorithms)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span className=\"actualValue\">\r\n\t\t\t\t\t\t\t\t{algorithms[this.state.currentAlgoritmIndex]}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"HeaderContent HeaderOption\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"discoverable\"\r\n\t\t\t\t\t\t\tid=\"sortBtn\"\r\n\t\t\t\t\t\t\tonClick={async () =>\r\n\t\t\t\t\t\t\t\tawait this.props.sortMethod(this.state.currentAlgoritmIndex)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdisabled={this.props.isSorting}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span className=\"actualValue\">&#9658;</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</nav>\r\n\t\t\t\t<section className=\"HeaderAdditionalInput\">\r\n\t\t\t\t\t<article className=\"sizeInput\">\r\n\t\t\t\t\t\t<label>Size </label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t\t\tmin=\"4\"\r\n\t\t\t\t\t\t\tmax=\"20\"\r\n\t\t\t\t\t\t\tstep=\"1\"\r\n\t\t\t\t\t\t\tvalue={this.state.sizeValue}\r\n\t\t\t\t\t\t\tdisabled={this.props.isSorting}\r\n\t\t\t\t\t\t\tonInput={this.evaluateSize}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</article>\r\n\t\t\t\t\t<article className=\"speedInput\">\r\n\t\t\t\t\t\t<span>Speed </span>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\tvalue=\"1\"\r\n\t\t\t\t\t\t\tname=\"speed\"\r\n\t\t\t\t\t\t\tdisabled={this.props.isSorting}\r\n\t\t\t\t\t\t\tonClick={this.evaluateSpeed}\r\n\t\t\t\t\t\t\tdefaultChecked\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label> x1</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\tvalue=\"2\"\r\n\t\t\t\t\t\t\tname=\"speed\"\r\n\t\t\t\t\t\t\tdisabled={this.props.isSorting}\r\n\t\t\t\t\t\t\tonClick={this.evaluateSpeed}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label> x2</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\tvalue=\"4\"\r\n\t\t\t\t\t\t\tname=\"speed\"\r\n\t\t\t\t\t\t\tdisabled={this.props.isSorting}\r\n\t\t\t\t\t\t\tonClick={this.evaluateSpeed}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label> x4</label>\r\n\t\t\t\t\t</article>\r\n\t\t\t\t</section>\r\n\t\t\t</header>\r\n\t\t);\r\n\t}\r\n}\r\n","import \"./Main.css\";\r\n\r\nexport default function Main(props) {\r\n\treturn (\r\n\t\t<section className=\"Main\" id=\"Main\">\r\n\t\t\t{props.bars}\r\n\t\t</section>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport \"./Bar.css\";\r\n\r\nexport default function Bar(props) {\r\n\treturn (\r\n\t<div\r\n\t\tclassName=\"Bar\"\r\n\t\tvalue={props.value}\r\n\t\tstyle={{\r\n\t\theight: props.value * 5,\r\n\t\tbackgroundColor: props.backgroundColor\r\n\t\t}}\r\n\t></div>\r\n\t);\r\n}","import React from \"react\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Bar from \"./Bar.js\";\nimport \"./App.css\";\n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst YELLOW = \"#FBC02D\";\nconst GREEN = \"#8BC34A\";\nconst PURPLE = \"#735ceb\";\n\nconst QUICKSORT = 0;\nconst MERGESORT = 1;\nconst BUBBLESORT = 2;\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      arrBars: [],\n      numBars: 12,\n      isSorted: false,\n      isSorting: false,\n      speed: 1\n    };\n\n    this.generate = this.generate.bind(this);\n    this.sortMethod = this.sortMethod.bind(this);\n    this.setSpeed = this.setSpeed.bind(this);\n    this.setSize = this.setSize.bind(this);\n  }\n\n  async componentDidMount() {\n    let arr = new Array(this.state.numBars);\n    for (let i = 0; i < this.state.numBars; i++) {\n      arr[i] = 0;\n    }\n    let barArr = arr.map((item, index) => {\n      return <Bar value={item} key={index} backgroundColor={PURPLE} />;\n    });\n    await this.setState({ arrBars: barArr });\n    await sleep(100);\n    // quando si carica il sito, le barre hanno altezza 0\n    // poi con la funzione generate ogni barra assume altezza corrispondente al valore casuale\n    // si fa tutto cio' per ottenere l'animazione iniziale di innnalzamento\n    this.generate();\n  }\n\n  async setSize(val) {\n    await this.setState({ numBars: val });\n    this.generate();\n  }\n\n  async setSpeed(val) {\n    await this.setState({ speed: val });\n  }\n\n  // restituisce la barra nella posizione index cambiato di colore\n  colorChanged(index, color) {\n    let element = this.state.arrBars[index];\n    return (\n      <Bar\n        value={element.props.value}\n        key={element.key}\n        backgroundColor={color}\n      />\n    );\n  }\n\n  // smista la richiesta di ordinamento\n  async sortMethod(type) {\n    let arr = this.state.arrBars;\n    if (this.state.isSorted) {\n      for (let i = 0; i < this.state.numBars; i++) {\n        arr[i] = this.colorChanged(i, PURPLE);\n      }\n      this.setState({ arrBars: arr });\n    }\n    this.setState({ isSorting: true });\n    switch (type) {\n      case QUICKSORT:\n        await this.quickSort();\n        break;\n      case BUBBLESORT:\n        await this.bubbleSort();\n        break;\n      case MERGESORT:\n        arr = await this.mergeSort();\n        for (let i = 0; i < this.state.numBars; i++)\n          arr[i] = this.colorChanged(i, GREEN);\n        this.setState({ arrBars: arr });\n        break;\n      default:\n        break;\n    }\n    this.setState({ isSorted: true, isSorting: false });\n  }\n\n  async merge(arr, start, end) {\n    const mid = Math.floor((start + end) / 2);\n    for (let i = start; i <= end; i++) arr[i] = this.colorChanged(i, YELLOW);\n    let tmpArr = [...arr];\n    let i = start,\n      j = mid + 1,\n      k = start;\n    // si mostra la porzione di array da ordinare e unire\n    this.setState({ arrBars: tmpArr });\n    await sleep(Math.floor(300 / this.state.speed));\n    while (i <= mid && j <= end) {\n      if (arr[i].props.value < arr[j].props.value) {\n        tmpArr[k] = arr[i];\n        i++;\n      } else {\n        tmpArr[k] = arr[j];\n        j++;\n      }\n      k++;\n    }\n    while (i <= mid) {\n      tmpArr[k] = arr[i];\n      k++;\n      i++;\n    }\n    while (j <= end) {\n      tmpArr[k] = arr[j];\n      k++;\n      j++;\n    }\n    // si mostra la porzione di array ordinata\n    this.setState({ arrBars: tmpArr });\n    await sleep(Math.floor(250 / this.state.speed));\n    return tmpArr;\n  }\n\n  async mergeSort(\n    arr = this.state.arrBars,\n    start = 0,\n    end = this.state.numBars - 1\n  ) {\n    if (start >= end) return arr;\n    const mid = Math.floor((start + end) / 2);\n    arr = await this.mergeSort(arr, start, mid);\n    arr = await this.mergeSort(arr, mid + 1, end);\n    arr = await this.merge(arr, start, end);\n    for (let i = start; i <= end; i++) {\n      arr[i] = this.colorChanged(i, PURPLE);\n    }\n    // si mostra lo stato attuale dell'array\n    this.setState({ arrBars: arr });\n    await sleep(Math.floor(250 / this.state.speed));\n    return arr;\n  }\n\n  async quickSort(\n    arr = this.state.arrBars,\n    start = 0,\n    end = this.state.numBars - 1\n  ) {\n    if (start > end) return;  // > e non >= per renderizzare in verde tutti gli elementi\n    let i = start,\n      j = start;\n    // arr[end] è il punto di riferimento per i confronti\n    arr[end] = this.colorChanged(end, YELLOW);\n    while (i < end) {\n      // decolorazione indice precedente e colorazione di quello attuale\n      if (i !== start)\n        arr[i - 1] = this.colorChanged(i - 1, PURPLE);\n      arr[i] = this.colorChanged(i, YELLOW);\n      if (j !== i)\n        arr[j] = this.colorChanged(j, YELLOW);\n      this.setState({ arrBars: arr });\n      await sleep(Math.floor(150 / this.state.speed));\n      if (arr[i].props.value < arr[end].props.value) {\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n        // si mostra lo scambio effettuato\n        this.setState({ arrBars: arr });\n        await sleep(Math.floor(100 / this.state.speed));\n        arr[j] = this.colorChanged(j, PURPLE);\n        j++;\n      }\n      i++;\n    }\n    // decolorazione dell'ultimo indice\n    if (i - 1 !== end) {\n      if (i - 1 >= start) {\n        arr[i - 1] = this.colorChanged(i - 1, PURPLE);\n      }\n    }\n    // scambio di j e end come previsto nell'algoritmo\n    if (j !== end) {\n      arr[j] = this.colorChanged(j, YELLOW);\n      this.setState({ arrBars: arr });\n      [arr[end], arr[j]] = [arr[j], arr[end]];\n      this.setState({ arrBars: arr });\n      arr[end] = this.colorChanged(end, PURPLE);\n    }\n    arr[j] = this.colorChanged(j, GREEN);\n    this.setState({ arrBars: arr });\n    await this.quickSort(arr, start, j - 1);\n    await this.quickSort(arr, j + 1, end);\n  }\n\n  async bubbleSort() {\n    let arr = this.state.arrBars;\n    let len = this.state.numBars;\n    for (let i = 0; i < len; i++) {\n      // si comincia sempre dal primo elemento nel bubble sort\n      arr[0] = this.colorChanged(0, YELLOW);\n      for (let j = 1; j < len - i; j++) {\n        // si colora l'indice man mano che si scorre\n        if (j !== 1) arr[j - 2] = this.colorChanged(j - 2, PURPLE);\n        arr[j] = this.colorChanged(j, YELLOW);\n        this.setState({ arrBars: arr });\n        await sleep(Math.floor(150 / this.state.speed));\n        if (arr[j - 1].props.value > arr[j].props.value) {\n          [arr[j - 1], arr[j]] = [arr[j], arr[j - 1]];\n          // si mostra lo scambio effettuato\n          await sleep(Math.floor(100 / this.state.speed));\n          this.setState({ arrBars: arr });\n        }\n      }\n      // colorazione ultimo elemento in posizione corretta\n      if (len - i - 1 >= 0)\n        arr[len - i - 1] = this.colorChanged(len - i - 1, GREEN);\n      // decolorazione delle barre gialle\n      if (len - i - 2 >= 0)\n        arr[len - i - 2] = this.colorChanged(len - i - 2, PURPLE);\n      this.setState({ arrBars: arr });\n    }\n  }\n\n  // genera un'array di numeri interi casuali da 5 a 95\n  // da questo, crea un'array di Bar da assegnare allo stato del componente\n  generate() {\n    let arr = new Array(this.state.numBars);\n    for (let i = 0; i < this.state.numBars; i++) {\n      arr[i] = Math.floor(Math.random() * 100 - 5 + 1) + 5;\n    }\n    let barArr = arr.map((item, index) => {\n      return <Bar value={item} key={index} backgroundColor={PURPLE} />;\n    });\n    this.setState({ arrBars: barArr, isSorted: false });\n  }\n\n  render() {\n    return (\n      <section className=\"App\" id=\"App\">\n        <Header\n          generate={this.generate}\n          sortMethod={this.sortMethod}\n          isSorting={this.state.isSorting}\n          speedValue={this.state.speed}\n          sizeValue={this.state.numBars}\n          setSpeed={this.setSpeed}\n          setSize={this.setSize}\n        />\n        <Main bars={this.state.arrBars} />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}